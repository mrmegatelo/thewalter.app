name: Master branch deploy

on:
  push:
    branches:
      - master

jobs:
  jobs:
    build:
      name: Build image
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@master
        - run: docker login ghcr.io -u $GITHUB_ACTOR -p ${{ secrets.GHCR_TOKEN }}
        - run: docker build -t ghcr.io/$GITHUB_ACTOR/infomate:latest -t ghcr.io/$GITHUB_ACTOR/walter:$GITHUB_SHA .
        - run: docker image push ghcr.io/$GITHUB_ACTOR/walter:$GITHUB_SHA
        - run: docker image push ghcr.io/$GITHUB_ACTOR/walter:latest

    deploy:
      name: Deploy
      runs-on: ubuntu-latest
      needs: build
      env:
        SSH_KEY_PATH: /tmp/ssh_key
      steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: Make envfile
          run: export | grep "secret_" | sed "s/declare -x secret_//" > .env
          env:
            SECRET_KEY: ${{ secrets.SECRET_KEY }}
            APP_HOST: ${{ env.APP_HOST }}
        - run: echo "GITHUB_SHA=$GITHUB_SHA" >> .env
        - run: echo "${{ secrets.PRODUCTION_SSH_KEY }}" > ${{ env.SSH_KEY_PATH }} && chmod 600 ${{ env.SSH_KEY_PATH }}
        - run: scp -o StrictHostKeyChecking=no -i ${{ env.SSH_KEY_PATH }} -r $(pwd)/* ${{ secrets.PRODUCTION_SSH_USERNAME }}@${{ secrets.PRODUCTION_SSH_HOST }}:/home/walter/walter
        - run: scp -o StrictHostKeyChecking=no -i ${{ env.SSH_KEY_PATH }} .env ${{ secrets.PRODUCTION_SSH_USERNAME }}@${{ secrets.PRODUCTION_SSH_HOST }}:/home/walter/walter/.env
        - run: scp -o StrictHostKeyChecking=no -i ${{ env.SSH_KEY_PATH }} docker-compose.production.yml ${{ secrets.PRODUCTION_SSH_USERNAME }}@${{ secrets.PRODUCTION_SSH_HOST }}:/home/walter/walter/docker-compose.prod.yml
        - run: ssh -i ${{ env.SSH_KEY_PATH }} ${{ secrets.PRODUCTION_SSH_USERNAME }}@${{ secrets.PRODUCTION_SSH_HOST }} "cd /home/walter/walter && docker login ghcr.io -u $GITHUB_ACTOR -p ${{ secrets.GHCR_TOKEN }} && docker pull ghcr.io/$GITHUB_ACTOR/walter:$GITHUB_SHA && docker-compose -f docker-compose.prod.yml --env-file=.env up -d && docker system prune --all --force"