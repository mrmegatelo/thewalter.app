version: '3.8'

services:

  nginx:
    image: ghcr.io/mrmegatelo/walter-nginx:${GITHUB_SHA:-latest}
    volumes:
      - staticfiles:/app/staticfiles
      - mediafiles:/app/mediafiles
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    ports:
      - 80:80
      - 443:443
      - 5555:5555
    depends_on:
      - web
      - flower

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  web:
    image: ghcr.io/mrmegatelo/walter-django:${GITHUB_SHA:-latest}
    command: /start
    volumes:
      - ./frontend/static:/app/frontend/static
      - staticfiles:/app/staticfiles
      - mediafiles:/app/mediafiles
    env_file:
      - .env
    environment:
      DOCKER: true
    depends_on:
      frontend:
        condition: service_completed_successfully
      redis:
        condition: service_started
      db:
        condition: service_started

  frontend:
    image: ghcr.io/mrmegatelo/walter-frontend:${GITHUB_SHA:-latest}
    command: build
    volumes:
      - ./frontend/static:/app/static
      - /app/node_modules

  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=hello_django
      - POSTGRES_USER=hello_django
      - POSTGRES_PASSWORD=hello_django

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "no", "--maxmemory", "500mb", "--maxmemory-policy", "allkeys-lru"]

  celery_worker:
    image: ghcr.io/mrmegatelo/walter-django:${GITHUB_SHA:-latest}
    command: /start-celeryworker
    volumes:
      - staticfiles:/app/staticfiles
      - mediafiles:/app/mediafiles
    env_file:
      - .env
    depends_on:
      - redis
      - db

  celery_beat:
    image: ghcr.io/mrmegatelo/walter-django:${GITHUB_SHA:-latest}
    command: /start-celerybeat
    volumes:
      - staticfiles:/app/staticfiles
      - mediafiles:/app/mediafiles
    env_file:
      - .env
    depends_on:
      - redis
      - db

  flower:
    image: ghcr.io/mrmegatelo/walter-django:${GITHUB_SHA:-latest}
    command: /start-flower
    volumes:
      - staticfiles:/app/staticfiles
      - mediafiles:/app/mediafiles
      - flower_db:/app/flower_db
    env_file:
      - .env
    depends_on:
      - redis
      - db

  proxy:
    image: 'peterdavehello/tor-socks-proxy'
    ports:
      - "9150:9150"

  splash:
    image: 'scrapinghub/splash'
    ports:
      - '8050:8050'

volumes:
  postgres_data:
  staticfiles:
  mediafiles:
  flower_db: